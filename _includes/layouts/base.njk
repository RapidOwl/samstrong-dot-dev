<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>
            {% if title %}
                {{ title + ' | ' + metadata.title }}
            {% else %}
                {{ metadata.title }}
            {% endif %}
        </title>
        <meta name="description" content="{{ description or metadata.description }}">
        <link rel="icon" type="image/x-icon" href="/img/favicon.ico">
        <link rel="stylesheet" href="{{ '/css/prism-coldark-cold.css' | url }}">
        <link rel="stylesheet" href="{{ '/css/index.css' | url }}">
        <link rel="alternate" href="{{ metadata.feed.path | url }}" type="application/atom+xml" title="{{ metadata.title }}">
        <link rel="alternate" href="{{ metadata.jsonfeed.path | url }}" type="application/json" title="{{ metadata.title }}">
        <link rel="preload" href="/fonts/lobster-font-latin.woff2" as="font" type="font/woff2" crossorigin>
    </head>
    <body>
        <header>
            {#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}
            <ul class="nav">
                <li class="site-title">
                    <a href="/" aria-label="Home">{{ metadata.title }}</a>
                </li>
                <li class="nav-item{% if entry.url == page.url %} nav-item-active{% endif %}">
                    {%- for entry in collections.all | eleventyNavigation %}
                        <a href="{{ entry.url | url }}">{{ entry.title }}</a>
                    {%- endfor %}
                </li>
            </ul>
        </header>
        <main {% if templateClass %} class="{{ templateClass }}" {% endif %}>
            {{ content | safe }}
        </main>
        <footer>
            <a href="http://twitter.com/rapidowl" target="_blank">Twitter</a>
            <a rel="me" href="https://hachyderm.io/@SamStrong" target="_blank">Mastodon</a>
        </footer>
        <!-- Current page: {{ page.url | url }} -->

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const callback = (entries, observer) => {
                    entries.forEach((entry) => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add("seen");
                            observer.unobserve(entry.target);
                        }
                    })
                };

                const headingObserver = new IntersectionObserver(callback, { });

                document.querySelectorAll('h2, h3').forEach((heading) => {
                    headingObserver.observe(heading);
                });            
            });
        </script>
    </body>
</html>